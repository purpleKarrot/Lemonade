/*
 * Copyright (C) 2013 Daniel Pfeifer <daniel@pfeifer-mail.de>
 *
 * Distributed under the Boost Software License, Version 1.0.
 * See accompanying file LICENSE_1_0.txt or copy at
 *   http://www.boost.org/LICENSE_1_0.txt
 */

namespace CMake
{

class Listsfile
{
	public void add_prefix(string prefix)
	{
		prefixes += prefix;
	}

	public void add_subdir(string name, Karrot.Dictionary variant)
	{
		variant.foreach((key, val) =>
		{
			subdirs.append_printf("set(%s \"%s\")\n", (name + "_" + key).up(), val);
		});

		subdirs.append_printf("add_subdirectory(%s)\n", name);

		variant.foreach((key, val) =>
		{
			subdirs.append_printf("unset(%s)\n", (name + "_" + key).up());
		});

		subdirs.append("\n");
	}

	public void write()
	{
		var file = Posix.FILE.open("CMakeLists.txt", "w");
		file.puts("# Generated by Karrot 0.1\n\n");
		file.puts("cmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n");
		file.puts("project(Workspace NONE)\n\n");

		if (prefixes.length > 0)
		{
			file.puts("list(APPEND CMAKE_PREFIX_PATH\n");
			foreach (var prefix in prefixes)
			{
				file.printf("  \"${Workspace_SOURCE_DIR}/%s\"\n", prefix);
			}
			file.puts("  )\n");
		}

		file.puts(subdirs.str);
	}

	private string[] prefixes;
	private StringBuilder subdirs = new StringBuilder();
}

class Injector: Driver, DriverDecorator
{
	public Injector(Listsfile listsfile, Driver component)
	{
		base(component);
		this.listsfile = listsfile;
	}

	public new void download(Karrot.Implementation impl, bool requested) throws Error
	{
		base.download(impl, requested);
		if(impl.component == "SOURCE")
		{
			listsfile.add_subdir(impl.name, impl.variant);
		}
		else
		{
			listsfile.add_prefix(impl.name);
		}
	}

	private Listsfile listsfile;
}

} // namespace CMake
